build:
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
  script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  - docker build -t $IMAGE_TAG --build-arg build_slug=$CI_COMMIT_SHORT_SHA -f prod.Dockerfile .
  - docker push $IMAGE_TAG

build_migrate:
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE/migrate:$CI_COMMIT_SHORT_SHA
  script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  - docker build -f automig.Dockerfile --build-arg build_slug=$CI_COMMIT_SHORT_SHA -t $IMAGE_TAG .
  - docker push $IMAGE_TAG

test:
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE/test:$CI_COMMIT_SHORT_SHA
  script:
  - docker build -t $IMAGE_TAG .
  - docker run --rm $IMAGE_TAG pylint lib
  - docker run --rm $IMAGE_TAG mypy lib
  - docker run --rm $IMAGE_TAG pytest

deploy:
  environment: local
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
  when: manual
  script:
  - docker rm -fv arbout || echo rm fail
  - docker run -d --name arbout -e ARB_SALT=$ARB_SALT -e SCRIPT_NAME=/arbout -p $ARB_PORT:8000 --restart unless-stopped $IMAGE_TAG
